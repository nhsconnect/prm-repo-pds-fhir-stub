#!/usr/bin/env bash

set -Eeo pipefail

###########################
# Local Config Parameters #
###########################

AWS_DEFAULT_REGION=eu-west-2
IMAGE_REPO_NAME=repo/pds-fhir-stub
export NHS_SERVICE=pds-fhir-stub
AWS_HELPERS_VERSION=0.2.26
echo "AWS helper scripts version: $AWS_HELPERS_VERSION"


###########################
# Shared utils            #
###########################

function download_util() {
  local UTIL_VERSION=$1
  local UTIL_FILENAME=$2

  local UTIL_FILEPATH="utils/$UTIL_VERSION/$UTIL_FILENAME"

  mkdir -p "utils/$UTIL_VERSION"
  if [[ ! -f $UTIL_FILEPATH ]];then
    wget --quiet -O $UTIL_FILEPATH https://github.com/nhsconnect/prm-deductions-support-infra/releases/download/${UTIL_VERSION}/${UTIL_FILENAME}
  fi
  chmod +x $UTIL_FILEPATH

  echo "$UTIL_FILEPATH"
}

function fetch_redaction_utils() {
  download_util $AWS_HELPERS_VERSION run-with-redaction.sh
  download_util $AWS_HELPERS_VERSION redactor
}

AWS_HELPERS_FILE=$(download_util $AWS_HELPERS_VERSION aws-helpers)
source $AWS_HELPERS_FILE

####################################
# Instance (Environment) Variables #
####################################

function check_env {
  if [[ -z "${NHS_ENVIRONMENT}" ]]; then
    echo "Must set NHS_ENVIRONMENT"
    exit 1
  fi
}

function set_image_tag() {
  export IMAGE_TAG=$(git rev-parse HEAD | cut -c 1-8)
}

function get_aws_account_id {
    AWS_ACCOUNT_ID=$(dojo -c Dojofile-infra "aws sts get-caller-identity | jq -r .Account")
}

#######################
# Terraform Functions #
#######################

function tf_init {
  check_env
  cd terraform

  terraform init -reconfigure \
    -backend-config key="${NHS_SERVICE}-${NHS_ENVIRONMENT}/terraform.tfstate" \
    -backend-config bucket="prm-deductions-${NHS_ENVIRONMENT}-terraform-state" \
    -backend-config dynamodb_table="prm-deductions-${NHS_ENVIRONMENT}-terraform-table" \
    -backend-config region=${AWS_DEFAULT_REGION}
}

function tf_plan {
  operation=$1

  if [[ -z "${GO_DEPENDENCY_LABEL_APP}" ]]; then
    set_image_tag
  else
    IMAGE_TAG=${GO_DEPENDENCY_LABEL_APP}
  fi

  tf_init

  terraform get # modules
  if [[ "${operation}" == "create" ]]; then
    terraform plan -var task_image_tag=$IMAGE_TAG -var-file=$NHS_ENVIRONMENT.tfvars -out="nhs_deployment.tfplan"
  elif [[ "${operation}" == "destroy" ]]; then
    terraform plan -var task_image_tag=$IMAGE_TAG -var-file=$NHS_ENVIRONMENT.tfvars -out="nhs_deployment.tfplan" -destroy
  else
    echo "Unknown operation (should be create or destroy), got: ${operation}"
    exit 1
  fi
}

function tf_apply {
  tf_init
  terraform get # modules
  terraform apply nhs_deployment.tfplan
  terraform output -json > tf-out.json
}

############################
# Docker Related Functions #
############################

function docker_login {
  echo Logging in to Amazon ECR...
  eval $(dojo -c Dojofile-infra "aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION")
}

function configure_docker_repository_uri {
  docker_login
  get_aws_account_id
  export REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/$IMAGE_REPO_NAME
}

function build_docker_image() {
  echo Build started on $(date)
  set_image_tag
  echo Building the Docker image...
  docker build --build-arg UTILS_VERSION=$AWS_HELPERS_VERSION -t $REPOSITORY_URI:latest -t $REPOSITORY_URI:$IMAGE_TAG .
  echo Build completed on `date`
}

function promote_docker_image_from_ci_to_perf {
  # e.g. deductions/ehr-repo:1ab321
  SRC_IMAGE_NAME_AND_TAG=$1
  if [ -z "$SRC_IMAGE_NAME_AND_TAG" ]; then
    >&2 echo "Image name and tag must be specified. e.g. deductions/ehr-repo:1ab321"
    exit $EXIT_CODE_GENERAL_FAILURE;
  fi

  environment_from="ci"
  environment_to="perf"

  echo >&2 "Promoting docker image from $environment_from to $environment_to..."

  assume_environment_role "$environment_from"
  configure_docker_registry_uri
  IMAGE_FULL_URL="$REGISTRY_URI/$SRC_IMAGE_NAME_AND_TAG"
  echo "Pulling the image from $IMAGE_FULL_URL"
  docker pull "$IMAGE_FULL_URL"
  docker tag "$IMAGE_FULL_URL" "$SRC_IMAGE_NAME_AND_TAG"

  assume_environment_role "$environment_to"
  configure_docker_registry_uri
  IMAGE_FULL_URL="$REGISTRY_URI/$SRC_IMAGE_NAME_AND_TAG"
  docker tag "$SRC_IMAGE_NAME_AND_TAG" "$IMAGE_FULL_URL"
  echo "Pushing the image to $IMAGE_FULL_URL"
  docker push "$IMAGE_FULL_URL"
}

###########
## TASKS ##
###########

command="$1"
case "${command}" in
  fetch_utils)
      fetch_redaction_utils
      ;;
  build_docker)
      dojo -c Dojofile-itest "./tasks _build"
      configure_docker_repository_uri
      fetch_redaction_utils
      build_docker_image
      echo "Pushing the Docker image... $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG"
      docker push $REPOSITORY_URI:$IMAGE_TAG
      ;;
  _build)
      rm -rf build/
      gradle assemble
      ;;
  build)
      dojo "./tasks _build"
      ;;
  _test_unit)
      gradle test
      ;;
  test_unit)
      dojo "./tasks _test_unit"
      ;;
  run_local)
    ./gradlew bootRun
    ;;
  _dep)
      gradle dependencyCheckAnalyze
      ;;
  dep)
      dojo "./tasks _dep"
      ;;
  tf)
      check_env
      dojo -c Dojofile-infra "./tasks _tf"
      ;;
  _tf)
      tf_init
      bash
      ;;
  _tf_plan)
      _assume_environment_role $NHS_ENVIRONMENT
      tf_plan "$2"
      ;;
  tf_plan)
      check_env
      dojo -c Dojofile-infra "./tasks _tf_plan $2"
      ;;
  _tf_apply)
      _assume_environment_role $NHS_ENVIRONMENT
      tf_apply
      ;;
  tf_apply)
      check_env
      dojo -c Dojofile-infra "./tasks _tf_apply"
      ;;
  promote_docker_image)
      check_env
      set_image_tag
      promote_docker_image_from_ci_to_perf "$IMAGE_REPO_NAME:$IMAGE_TAG"
      ;;
  _wait_ecs)
      _assume_environment_role $NHS_ENVIRONMENT
      aws ecs wait services-stable \
        --region $AWS_DEFAULT_REGION \
        --cluster $NHS_ENVIRONMENT-${NHS_SERVICE}-ecs-cluster \
        --service $NHS_ENVIRONMENT-${NHS_SERVICE}-service
      ;;
  wait_ecs)
      check_env
      dojo -c Dojofile-infra "./tasks _wait_ecs"
      ;;
  *)
      echo "Invalid command: '${command}'"
      exit 1
      ;;
esac
set +e
